[{"C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\index.js":"1","C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\reportWebVitals.js":"2","C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\App.js":"3","C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\Components\\MainWindow.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":159,"mtime":1611050424270,"results":"8","hashOfConfig":"6"},{"size":5240,"mtime":1611092172331,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1c7calb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\index.js",[],["19","20"],"C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\reportWebVitals.js",[],"C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\App.js",[],"C:\\Users\\Or\\Desktop\\DCS-defense-client\\defense-client\\src\\Components\\MainWindow.js",["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":6,"column":16,"nodeType":"29","messageId":"30","endLine":6,"endColumn":18},{"ruleId":"31","severity":1,"message":"32","line":75,"column":21,"nodeType":"33","endLine":84,"endColumn":6},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]